{
	"info": {
		"_postman_id": "honey-money-api-collection",
		"name": "Honey Money API",
		"description": "Collection completa da API Honey Money com sistema de autenticação JWT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva os tokens JWT e refresh automaticamente",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.access_token);",
									"    pm.environment.set('refresh_token', response.refresh_token);",
									"    pm.environment.set('expires_in', response.expires_in);",
									"    pm.environment.set('user_uuid', response.user.uuid);",
									"    pm.environment.set('user_email', response.user.email);",
									"    pm.environment.set('user_name', response.user.name);",
									"    console.log('Tokens JWT e Refresh salvos automaticamente!');",
									"    console.log('Access Token expira em:', response.expires_in, 'segundos');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Faz login do usuário e retorna JWT token"
					},
					"response": []
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"profile"
							]
						},
						"description": "Retorna o perfil do usuário autenticado"
					},
					"response": []
				},
				{
					"name": "Validate Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/validate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"validate"
							]
						},
						"description": "Valida se o token JWT é válido"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva os novos tokens automaticamente",
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.access_token);",
									"    pm.environment.set('refresh_token', response.refresh_token);",
									"    pm.environment.set('expires_in', response.expires_in);",
									"    console.log('Novos tokens salvos automaticamente!');",
									"    console.log('Novo Access Token expira em:', response.expires_in, 'segundos');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						},
						"description": "Renova o access token usando o refresh token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Limpa os tokens após logout",
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    pm.environment.set('jwt_token', '');",
									"    pm.environment.set('refresh_token', '');",
									"    pm.environment.set('expires_in', '');",
									"    console.log('Tokens removidos após logout!');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Faz logout e revoga o refresh token"
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados à autenticação JWT"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o UUID do usuário criado",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('created_user_uuid', response.uuid);",
									"    console.log('UUID do usuário criado salvo:', response.uuid);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"João Silva\",\n  \"email\": \"joao@example.com\",\n  \"password\": \"senha123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Cria um novo usuário (rota pública)"
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Lista todos os usuários (requer autenticação)"
					},
					"response": []
				},
				{
					"name": "Search Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/search?name=João&email=joao",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"search"
							],
							"query": [
								{
									"key": "name",
									"value": "João",
									"description": "Filtro por nome (opcional)"
								},
								{
									"key": "email",
									"value": "joao",
									"description": "Filtro por email (opcional)"
								}
							]
						},
						"description": "Busca usuários por nome e/ou email (requer autenticação)"
					},
					"response": []
				},
				{
					"name": "Get User by UUID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{user_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_uuid}}"
							]
						},
						"description": "Busca um usuário específico pelo UUID (requer autenticação)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"João Silva Atualizado\",\n  \"email\": \"joao.novo@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/{{user_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{user_uuid}}"
							]
						},
						"description": "Atualiza dados de um usuário (requer autenticação)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/{{created_user_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{created_user_uuid}}"
							]
						},
						"description": "Deleta um usuário (requer autenticação)"
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de usuários"
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Create Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o ID do perfil criado",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('created_profile_id', response.id);",
									"    console.log('ID do perfil criado salvo:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Administrador\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/profiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles"
							]
						},
						"description": "Cria um novo perfil de usuário"
					},
					"response": []
				},
				{
					"name": "Get All Profiles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles"
							]
						},
						"description": "Lista todos os perfis disponíveis"
					},
					"response": []
				},
				{
					"name": "Get Profile by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profiles/{{created_profile_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles",
								"{{created_profile_id}}"
							]
						},
						"description": "Busca um perfil específico pelo ID"
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Super Administrador\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/profiles/{{created_profile_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles",
								"{{created_profile_id}}"
							]
						},
						"description": "Atualiza um perfil existente"
					},
					"response": []
				},
				{
					"name": "Delete Profile",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profiles/{{created_profile_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profiles",
								"{{created_profile_id}}"
							]
						},
						"description": "Remove um perfil"
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de perfis de usuário"
		},
		{
			"name": "Functionalities",
			"item": [
				{
					"name": "Create Functionality",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o ID da funcionalidade criada",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('created_functionality_id', response.id);",
									"    console.log('ID da funcionalidade criada salvo:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Gerenciar Usuários\",\n  \"description\": \"Permite criar, editar e excluir usuários do sistema\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/functionalities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"functionalities"
							]
						},
						"description": "Cria uma nova funcionalidade do sistema"
					},
					"response": []
				},
				{
					"name": "Get All Functionalities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/functionalities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"functionalities"
							]
						},
						"description": "Lista todas as funcionalidades disponíveis"
					},
					"response": []
				},
				{
					"name": "Get Functionality by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/functionalities/{{created_functionality_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"functionalities",
								"{{created_functionality_id}}"
							]
						},
						"description": "Busca uma funcionalidade específica pelo ID"
					},
					"response": []
				},
				{
					"name": "Update Functionality",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Gerenciar Usuários Avançado\",\n  \"description\": \"Permite criar, editar, excluir e gerenciar permissões de usuários do sistema\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/functionalities/{{created_functionality_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"functionalities",
								"{{created_functionality_id}}"
							]
						},
						"description": "Atualiza uma funcionalidade existente"
					},
					"response": []
				},
				{
					"name": "Delete Functionality",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/functionalities/{{created_functionality_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"functionalities",
								"{{created_functionality_id}}"
							]
						},
						"description": "Remove uma funcionalidade"
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados ao gerenciamento de funcionalidades do sistema"
		},
		{
			"name": "Profile Functionalities",
			"item": [
				{
					"name": "Create Profile Functionality",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o ID da associação criada",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (Array.isArray(response) && response.length > 0) {",
									"        pm.environment.set('created_profile_functionality_id', response[0].id);",
									"        console.log('ID da associação perfil-funcionalidade criada salvo:', response[0].id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"profileId\": {{created_profile_id}},\n    \"functionalityId\": {{created_functionality_id}}\n  }\n]"
						},
						"url": {
							"raw": "{{base_url}}/profile-functionalities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profile-functionalities"
							]
						},
						"description": "Associa funcionalidades a um perfil (aceita array de associações)"
					},
					"response": []
				},
				{
					"name": "Get All Profile Functionalities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile-functionalities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profile-functionalities"
							]
						},
						"description": "Lista todas as associações entre perfis e funcionalidades"
					},
					"response": []
				},
				{
					"name": "Get Functionalities by Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile-functionalities/{{created_profile_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profile-functionalities",
								"{{created_profile_id}}"
							]
						},
						"description": "Lista todas as funcionalidades de um perfil específico"
					},
					"response": []
				},
				{
					"name": "Delete Profile Functionality",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile-functionalities/{{created_profile_functionality_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"profile-functionalities",
								"{{created_profile_functionality_id}}"
							]
						},
						"description": "Remove uma associação entre perfil e funcionalidade"
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados à associação entre perfis e funcionalidades"
		},
		{
			"name": "User Profiles",
			"item": [
				{
					"name": "Create User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o ID da associação usuário-perfil criada",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('created_user_profile_id', response.id);",
									"    console.log('ID da associação usuário-perfil criada salvo:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userUuid\": \"{{user_uuid}}\",\n  \"profileId\": {{created_profile_id}}\n}"
						},
						"url": {
							"raw": "{{base_url}}/user_profiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_profiles"
							]
						},
						"description": "Associa um perfil a um usuário"
					},
					"response": []
				},
				{
					"name": "Get Profiles by User UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user_profiles/profiles/{{user_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_profiles",
								"profiles",
								"{{user_uuid}}"
							]
						},
						"description": "Lista todos os perfis de um usuário específico"
					},
					"response": []
				},
				{
					"name": "Get Functionalities by User UUID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user_profiles/profiles/{{user_uuid}}/functionalities",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_profiles",
								"profiles",
								"{{user_uuid}}",
								"functionalities"
							]
						},
						"description": "Lista todas as funcionalidades disponíveis para um usuário específico"
					},
					"response": []
				},
				{
					"name": "Get Users by Profile ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user_profiles/users/{{created_profile_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_profiles",
								"users",
								"{{created_profile_id}}"
							]
						},
						"description": "Lista todos os usuários que possuem um perfil específico"
					},
					"response": []
				},
				{
					"name": "Delete User Profile",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user_profiles/{{created_user_profile_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user_profiles",
								"{{created_user_profile_id}}"
							]
						},
						"description": "Remove uma associação entre usuário e perfil"
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados à associação entre usuários e perfis"
		},
		{
			"name": "App Info",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Verifica se a API está funcionando"
					},
					"response": []
				}
			],
			"description": "Endpoints gerais da aplicação"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script executado antes de cada requisição",
					"console.log('Executando requisição para:', pm.request.url);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Script executado após cada requisição",
					"console.log('Status da resposta:', pm.response.code);",
					"console.log('Tempo de resposta:', pm.response.responseTime + 'ms');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_email",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "created_user_uuid",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "expires_in",
			"value": "",
			"type": "string"
		},
		{
			"key": "created_profile_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "created_functionality_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "created_profile_functionality_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "created_user_profile_id",
			"value": "",
			"type": "string"
		}
	]
}